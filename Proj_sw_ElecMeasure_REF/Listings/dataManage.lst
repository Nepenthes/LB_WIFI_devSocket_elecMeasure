C51 COMPILER V9.54   DATAMANAGE                                                            09/20/2018 11:05:43 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DATAMANAGE
OBJECT MODULE PLACED IN .\Output\dataManage.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Usr\dataManage.c OMF2 ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Pr
                    -oj_sw_ElecMeasure;.\Usr;.\Usr_lib;.\std_Lib;.\hwDriver;.\dataTrans) DEBUG PRINT(.\Listings\dataManage.lst) OBJECT(.\Outp
                    -ut\dataManage.obj)

line level    source

   1          #include "dataManage.h"
   2          
   3          #include "wifi_LPT220.h"
   4          #include "Tips.h"
   5          
   6          #include "soft_uart.h"
   7          #include "eeprom.h"
   8          #include "delay.h"
   9          
  10          #include "string.h"
  11          #include "stdio.h"
  12          
  13          /********************本地文件变量创建区******************/
  14          unsigned char xdata MAC_ID[6] = {0};
  15          //设备锁标志
  16          bit     deviceLock_flag = false;
  17          
  18          /*------------------------------------------------------------------*/
  19          void software_Reset(void){
  20   1              
  21   1              beeps(2);       //提示音
  22   1              
  23   1              ((void(code *)(void))0x0000)();
  24   1              
  25   1              //无需状态恢复，重启自动初始化
  26   1      }
  27          
  28          void MAC_ID_Relaes(void){
  29   1      
  30   1              unsigned char code *id_ptr      = ROMADDR_ROM_STC_ID;
  31   1              
  32   1              memcpy(MAC_ID, id_ptr - 6, 6); //顺序向前，往前读，只取后六位
  33   1      }
  34          
  35          void SYS_Data_Relaes(void){
  36   1      
  37   1              u8 dats_temp = 0;
  38   1              
  39   1              /*设备锁信息回复*/
  40   1              EEPROM_read_n(EEPROM_ADDR_deviceLockFLAG, &dats_temp, 1);
  41   1              if(dats_temp)deviceLock_flag = 1;
  42   1              else deviceLock_flag  = 0;
  43   1      }
  44          
  45          void Factory_recover(void){
  46   1      
  47   1              u8 xdata log_info[30]           = {0};
  48   1              u8               eeprom_buffer[20]      = {0};
  49   1              u8 code  IP_default[4]          = {47,52,5,108};                //默认香港服务器
  50   1              
  51   1              beeps(7);       //提示音
  52   1              
  53   1              WIFI_hwRestoreFactory();
C51 COMPILER V9.54   DATAMANAGE                                                            09/20/2018 11:05:43 PAGE 2   

  54   1              
  55   1              EEPROM_SectorErase(EEPROM_ADDR_START);          //首次启动EEPROM擦除
  56   1              delayMs(10);
  57   1              
  58   1              eeprom_buffer[0] = BIRTHDAY_FLAG;                       //生日标记
  59   1              EEPROM_write_n(EEPROM_ADDR_BirthdayMark, &eeprom_buffer[0], 1);
  60   1              delayMs(10);
  61   1              
  62   1              eeprom_buffer[0] = 0;                                           //设备锁解开
  63   1              EEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &eeprom_buffer[0], 1);
  64   1              delayMs(10);    
  65   1              
  66   1              memset(eeprom_buffer, 0, 12 * sizeof(u8));      //普通开关定时时刻表清零
  67   1              EEPROM_write_n(EEPROM_ADDR_swTimeTab, &eeprom_buffer[0], 13);
  68   1              delayMs(10);
  69   1              
  70   1              memcpy(eeprom_buffer, IP_default, 4);           //服务器IP模板设置默认
  71   1              EEPROM_write_n(EEPROM_ADDR_serverIP_record, &eeprom_buffer[0], 4);
  72   1              delayMs(10);
  73   1      }
  74          
  75          void birthDay_Judge(void){
  76   1              
  77   1              u8               eeprom_buffer[20]      = {0};
  78   1      #if(SMARTSWITCH_IF != 1)
  79   1              u8 code  IP_default[6]          = {47,52,5,108,0,80};           //默认香港服务器,端口80
  80   1      #else
              //      u8 code  IP_default[4]          = {47,52,5,108};                        //默认香港服务器
                      u8 code  IP_default[6]          = {112,124,61,191,0x1f,0x40};   //默认中国服务器,端口8000
              #endif
  84   1              
  85   1              delayMs(10);
  86   1              
  87   1      #if(IF_REBORN != 1)             //出厂前配置清空――转世设置，修改头文件IF_REBORN 值即可
  88   1              
  89   1              EEPROM_read_n(EEPROM_ADDR_BirthdayMark, &eeprom_buffer[0], 1);
  90   1              delayMs(10);
  91   1              
  92   1              if(BIRTHDAY_FLAG != eeprom_buffer[0]){
  93   2              
  94   2                      EEPROM_SectorErase(EEPROM_ADDR_START);          //首次启动EEPROM擦除
  95   2                      delayMs(10);
  96   2                      
  97   2                      eeprom_buffer[0] = BIRTHDAY_FLAG;                       //生日标记
  98   2                      EEPROM_write_n(EEPROM_ADDR_BirthdayMark, &eeprom_buffer[0], 1);
  99   2                      delayMs(10);
 100   2                      
 101   2                      eeprom_buffer[0] = 0;                                           //设备锁解开
 102   2                      EEPROM_write_n(EEPROM_ADDR_deviceLockFLAG, &eeprom_buffer[0], 1);
 103   2                      delayMs(10);            
 104   2                      
 105   2                      memset(eeprom_buffer, 0, 12 * sizeof(u8));      //普通开关定时时刻表清零
 106   2                      EEPROM_write_n(EEPROM_ADDR_swTimeTab, &eeprom_buffer[0], 13);
 107   2                      delayMs(10);
 108   2                      
 109   2                      eeprom_buffer[0] = 0;                   //绿色模式定时清零
 110   2                      EEPROM_write_n(EEPROM_ADDR_swDelayFLAG, &eeprom_buffer[0], 1);
 111   2                      EEPROM_write_n(EEPROM_ADDR_periodCloseLoop, &eeprom_buffer[0], 1);
 112   2                      delayMs(10);
 113   2                      
 114   2                      memcpy(eeprom_buffer, IP_default, 6);           //服务器IP模板设置默认
 115   2                      EEPROM_write_n(EEPROM_ADDR_serverIP_record, &eeprom_buffer[0], 6);
C51 COMPILER V9.54   DATAMANAGE                                                            09/20/2018 11:05:43 PAGE 3   

 116   2                      delayMs(10);
 117   2                      
 118   2              }else{
 119   2      
 120   2                      
 121   2              }
 122   1      
 123   1      #else
                      
                      eeprom_buffer[0] = 0;           //重新标记出厂覆盖标记
                      coverEEPROM_write_n(EEPROM_ADDR_BirthdayMark, &eeprom_buffer[0], 1);
                      
                      delayMs(10);
                      
                      eeprom_buffer[0] = 0;
                      EEPROM_read_n(EEPROM_ADDR_BirthdayMark, &eeprom_buffer[0], 1);
                      
              #endif
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    526    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =      6      30
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
